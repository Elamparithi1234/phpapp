{
    "openapi": "3.0.0",
    "info": {
        "title": "L5 OpenApi",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "customer@prepareurself"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/getAllCourses": {
            "post": {
                "tags": [
                    "Courses"
                ],
                "description": "Get all courses data",
                "operationId": "App\\Http\\Controllers\\CourseController::wsGetAllCourses",
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success']}"
                    }
                }
            }
        },
        "/api/getAllResources": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "description": "Get all resources of a particular topic",
                "operationId": "App\\Http\\Controllers\\ResourceController::wsGetAllResources",
                "parameters": [
                    {
                        "name": "topic_id",
                        "in": "query",
                        "description": "topic_id of Topic ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of resources : theory|video",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of resources,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_number",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Topic Id is Invalid'],[error_code=>2,'msg'=>'Topic Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/getAllTopics": {
            "post": {
                "tags": [
                    "Topics"
                ],
                "description": "Get all topics of a particular course",
                "operationId": "App\\Http\\Controllers\\TopicController::wsGetAllTopics",
                "parameters": [
                    {
                        "name": "course_id",
                        "in": "query",
                        "description": "Course id of course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Count of resources,If not passed by default value of count is 10",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_number",
                        "in": "query",
                        "description": "Page number , if not then by default page 1",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'success'],[error_code=>1,msg=>'Course Id is Invalid'],[error_code=>2,'msg'=>'Course Id is Compulsory']}"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::register",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "last name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Password of user Min length 8 characters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>1,msg=>'Invalid user data'],[error_code=>0,msg=>'Registeration Successfully Done']}"
                    }
                }
            }
        },
        "/api/check-username": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::checkUserName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "check unique username of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>2,msg=>'Username Already Exits'],[error_code=>0,msg=>'Username available'],[error_code=>1,msg=>'Missing user name']}"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "login a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "password of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'login Successfully Done']}"
                    }
                }
            }
        },
        "/api/update-user": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "login a user to prepareurself",
                "operationId": "App\\Http\\Controllers\\UserAuthController::updateUserData",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "first name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "last name of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dob",
                        "in": "query",
                        "description": "date of birth of user",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "description": "user phone number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "android_token",
                        "in": "query",
                        "description": "token for notification",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{[error_code=>0,msg=>'Update Successfully Done']}"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key_security_example": {
                "type": "apiKey",
                "description": "A short description for security scheme",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}